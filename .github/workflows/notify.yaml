name: Notify on Push & Issues
run-name: "Notification Triggered by ${{ github.actor }}"

on:
  push:
    branches:
      - github-issues
  issues:
    types:
      - opened
      - closed # Added issue closing
      - reopened # Added issue reopening

jobs:
  notify:
    runs-on: ubuntu-latest

    steps:
      # Handle Push Notification
      - name: Discord Commit Notification
        if: github.event_name == 'push'
        uses: Sniddl/discord-commits@v1.6
        with:
          webhook: ${{ secrets.DISCORD_WEBHOOK_URL }}
          template: "avatar-with-link"
          include-extras: true

      - name: Send Telegram Message on Push
        if: github.event_name == 'push'
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_TOPIC_ID: ${{ secrets.TELEGRAM_UPDATES }}
          GITHUB_COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
          GITHUB_COMMIT_AUTHOR: ${{ github.event.head_commit.author.name }}
          GITHUB_COMMIT_URL: ${{ github.event.head_commit.url }}
        run: |
          curl -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
          -d chat_id="${TELEGRAM_CHAT_ID}" \
          -d message_thread_id="${TELEGRAM_TOPIC_ID}" \
          -d text="🚀 *New Commit Pushed to Main!*
          📝 *Message:* ${GITHUB_COMMIT_MESSAGE}
          🧑‍💻 *Author:* ${GITHUB_COMMIT_AUTHOR}
          🔗 [View Commit](${GITHUB_COMMIT_URL})" \
          -d parse_mode="Markdown"

      # Handle Issue Notifications with improved formatting
      - name: Discord Issue Notification
        if: github.event_name == 'issues'
        uses: Sniddl/discord-commits@v1.6
        with:
          webhook: ${{ secrets.DISCORD_ISSUES_URL }}
          template: "avatar-with-link"
          include-extras: true
          username: "GitHub Issues"
          message: |
            ${{ github.event.action == 'opened' && '🆕' || github.event.action == 'closed' && '🔒' || '🔄' }} Issue ${{ github.event.action }}: **${{ github.event.issue.title }}**
            👤 By: ${{ github.event.issue.user.login }}
            📝 Labels: ${{ join(github.event.issue.labels.*.name, ', ') }}
            🔗 [View Issue](${{ github.event.issue.html_url }})

      - name: Send Telegram Issue Update
        if: github.event_name == 'issues'
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_TOPIC_ID: ${{ secrets.TELEGRAM_ISSUES }}
        run: |
          # Set emoji based on action
          if [[ "${{ github.event.action }}" == "opened" ]]; then
            ACTION_EMOJI="🆕"
          elif [[ "${{ github.event.action }}" == "closed" ]]; then
            ACTION_EMOJI="🔒"
          else
            ACTION_EMOJI="🔄"
          fi

          MESSAGE="${ACTION_EMOJI} *Issue ${{ github.event.action }}!*
          📝 *Title:* ${{ github.event.issue.title }}
          👤 *Author:* ${{ github.event.issue.user.login }}
          🏷️ *Labels:* ${{ join(github.event.issue.labels.*.name, ', ') }}
          💬 *Comments:* ${{ github.event.issue.comments }}
          🔗 [View Issue](${{ github.event.issue.html_url }})"

          curl -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
          -H "Content-Type: application/json" \
          -d "{
            \"chat_id\": \"${TELEGRAM_CHAT_ID}\",
            \"message_thread_id\": \"${TELEGRAM_TOPIC_ID}\",
            \"text\": \"${MESSAGE}\",
            \"parse_mode\": \"Markdown\",
            \"disable_web_page_preview\": true
          }"
