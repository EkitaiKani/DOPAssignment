name: Login test
run-name: ${{ github.actor }} is testing the Login

on:
  push:
    branches:
      - github-actions

jobs:
  setup:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: myuser
          POSTGRES_PASSWORD: mypassword
          POSTGRES_DB: database-setup
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout for app
        uses: actions/checkout@v4
      
      - name: List repo
        run: ls

      - name: Install PostgreSQL client
        run: |
          sudo apt-get update
          sudo apt-get install --yes postgresql-client
      
      - name: Debug PostgreSQL logs
        run: |
          docker logs $(docker ps -q -f ancestor=postgres:latest)

      - name: Test database connection
        run: |
          PGPASSWORD=mypassword psql -h localhost -U myuser -d database-setup

      # Initialize database using database-setup.sql
      - name: Initialize database
        run: |
          PGPASSWORD=mypassword psql -h localhost -U myuser -d database-setup -f ./server/database-setup.sql

      - name: Verify database setup
        run: |
          PGPASSWORD=mypassword psql -h localhost -U myuser -d database-setup -c "SELECT COUNT(*) FROM students;"
      
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # Create .env file 
      - name: Create .env file
        run: |
          echo "# Database Configuration" > .env
          echo "DB_NAME=database-setup" >> .env
          echo "DB_USER=myuser" >> .env
          echo "DB_PASSWORD=mypassword" >> .env
          echo "DB_HOST=localhost" >> .env

      - name: Install ChromeDriver
        run: |
          sudo apt-get update
          sudo apt-get install -y chromium-chromedriver
      
      - name: Check Chrome version
        run: chromium-browser --version
        
      - name: Run App.py
        run: |
          python ./server/app.py &
          echo "Flask server started"

      - name: Run login tests
        run: behave ./tests/features

