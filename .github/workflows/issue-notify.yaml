name: Issue Notification
on:
  issues:
    types: [opened]

  workflow_dispatch:

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - name: Send issue to Discord
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_ISSUES_URL }}
        with:
          args: 'ðŸ†• New Issue Created: "${{ github.event.issue.title }}" by ${{ github.event.issue.user.login }} - ${{ github.event.issue.html_url }}'
        
      - name: Send Telegram Notification
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
          TELEGRAM_TOPIC_ID: ${{ secrets.TELEGRAM_ISSUES }}
          ISSUE_TITLE: ${{ github.event.issue.title }}
          ISSUE_AUTHOR: ${{ github.event.issue.user.login }}
          ISSUE_URL: ${{ github.event.issue.html_url }}
        run: |
          # Function to escape Telegram MarkdownV2 special characters
          escape_markdown() {
            echo "$1" | sed -E 's/([][_*()~`>#+\-=|{}.!])/\\\1/g'
          }

          ESCAPED_TITLE=$(escape_markdown "$ISSUE_TITLE")
          ESCAPED_AUTHOR=$(escape_markdown "$ISSUE_AUTHOR")
          ESCAPED_URL=$(escape_markdown "$ISSUE_URL")

          # Construct JSON payload manually to avoid parsing issues
          curl -X POST "https://api.telegram.org/bot${TELEGRAM_BOT_TOKEN}/sendMessage" \
            -H "Content-Type: application/json" \
            -d "{
              \"chat_id\": \"${TELEGRAM_CHAT_ID}\",
              \"parse_mode\": \"MarkdownV2\",
              \"text\": \"ðŸ†• *New Issue Opened!*\\n\\n*Title:* ${ESCAPED_TITLE}\\n*Created by:* ${ESCAPED_AUTHOR}\\n[View Issue](${ESCAPED_URL})\"
            }"
