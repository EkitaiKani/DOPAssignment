name: Move Task to Done on PR Merge

on:
  pull_request:
    types:
      - closed

jobs:
  update-issue-status:
    runs-on: ubuntu-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Get Issue linked to PR and Update Status
        env:
          GH_TOKEN: ${{ secrets.GH_TOKEN }}
        run: |
          echo "Debug: Checking if PR was merged..."
          if [[ "${{ github.event.pull_request.merged }}" == "true" ]]; then
            PR_NUMBER="${{ github.event.pull_request.number }}"
            echo "Debug: PR Number = $PR_NUMBER"

            echo "Debug: Fetching PR details from GitHub API..."
            PR_DETAILS=$(curl -s -H "Authorization: token $GH_TOKEN" \
                "https://api.github.com/repos/EkitaiKani/DOPAssignment/pulls/$PR_NUMBER")
            
            echo "Debug: Raw PR Details = $PR_DETAILS"

            PR_BODY=$(echo "$PR_DETAILS" | jq -r '.body')
            echo "Debug: PR Body = $PR_BODY"

            if [ -n "$PR_BODY" ] && [[ "$PR_BODY" != "null" ]]; then
              ISSUE_NUMBER=$(echo "$PR_BODY" | grep -o '#[0-9]\+' | tr -d '#')
              echo "Debug: Extracted Issue Number = $ISSUE_NUMBER"

              if [ -n "$ISSUE_NUMBER" ]; then
                echo "Debug: Found linked issue #$ISSUE_NUMBER"

                # Fetch Issue Node ID (Required for GraphQL API)
                echo "Debug: Fetching issue Node ID..."
                ISSUE_NODE_ID=$(curl -s -H "Authorization: token $GH_TOKEN" \
                    -H "Accept: application/vnd.github.v3+json" \
                    "https://api.github.com/repos/EkitaiKani/DOPAssignment/issues/$ISSUE_NUMBER" | jq -r '.node_id')
                echo "Debug: Issue Node ID = $ISSUE_NODE_ID"

                # Update Issue Status to "Done" in GitHub Projects
                echo "Debug: Updating issue status to 'Done'..."
                GRAPHQL_QUERY='
                mutation {
                  updateIssue(input: {id: "'"$ISSUE_NODE_ID"'", state: CLOSED}) {
                    issue {
                      id
                    }
                  }
                }'

                curl -X POST -H "Authorization: token $GH_TOKEN" \
                     -H "Content-Type: application/json" \
                     -d "{\"query\": \"$GRAPHQL_QUERY\"}" \
                     https://api.github.com/graphql

                echo "Debug: Issue #$ISSUE_NUMBER status updated to 'Done'!"
              else
                echo "Debug: No issue linked in PR body."
              fi
            else
              echo "Debug: PR body is empty or null."
            fi
          else
            echo "Debug: PR was closed but not merged, skipping task update."
          fi
